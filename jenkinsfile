
def projectGitRepo="https://github.com/akaish80/hello-world-jenkins"

pipeline {

 agent { node { label 'master' } }
    
    stages {

        stage("Cloning Git") {
            
            steps {
           sh "rm -Rf /opts/temp"

           step([$class: "WsCleanup"])
            // Clean before build
            // cleanWs()
           checkout([$class: "GitSCM", branches: [[name: "*/master"]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "1733770445308780590784b7bbf76cc4dd6c7e57", url: "${projectGitRepo}"]]])       
            }
       } 

         stage("Creating the version number") {
            steps {
                script {
                    echo "***************Creating the version number***************"
                    env_APPL_BUILD_NUMBER="${env.BUILD_ID}-${env.BUILD_TIMESTAMP}"
                    echo "${env_APPL_BUILD_NUMBER}"
                    
                    sh "echo ${getCommitId()}-${env_APPL_BUILD_NUMBER} >> ./.version"
                }
            }
         }

        stage("installing the packings & building the package") {
            steps {
                script {

                  echo "***************installing the packings & building the package ***************"
                    nodejs("Node-14.2.0_With_Yarn") {
                        sh "npm --version"
                        sh "npm install"
                   }
                }
            }
          }
    }
}

def getCommitId() {
    sh 'git rev-parse HEAD > .git/commitId'
    def commitId = readFile ('.git/commitId').trim()
    sh 'rm .git/commitId'
    echo "commitid is :${commitId}"
    commitId
}